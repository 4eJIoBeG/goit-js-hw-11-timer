{"mappings":"AA8Dc,IA9Dd,MAMEA,QAAQC,GAqBNC,SAASC,cAAcF,GAAUG,mBAAmB,YApBnC,6nB,CAuBnBC,QACEC,KAAKN,QAAQM,KAAKL,UAClB,MAAMM,EAAaC,aAAY,KAC7B,MAAMC,EAAQH,KAAKI,WAAaC,KAAKC,MACrCN,KAAKO,YAAYJ,EAAOF,EAAW,GAClC,I,CAGLM,YAAYC,EAAMP,GAChB,GAAIO,GAAQ,EAEV,YADAC,cAAcR,GAIhB,MAAMS,EAAOV,KAAKW,IAAIC,KAAKC,MAAML,EAAQ,QACnCM,EAAQd,KAAKW,IACjBC,KAAKC,MAAML,EAAS,MAAyB,OAEzCO,EAAOf,KAAKW,IAAIC,KAAKC,MAAML,EAAS,KAAoB,MACxDQ,EAAOhB,KAAKW,IAAIC,KAAKC,MAAML,EAAS,IAAc,MAExDZ,SAASC,cAAc,uBAAuBoB,YAAcP,EAC5Dd,SAASC,cAAc,wBAAwBoB,YAAcH,EAC7DlB,SAASC,cAAc,uBAAuBoB,YAAcF,EAC5DnB,SAASC,cAAc,uBAAuBoB,YAAcD,C,CAG9DL,IAAIO,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAzDnCC,aAAY1B,SAAEA,EAAQS,WAAEA,IACtBJ,KAAKL,SAAWA,EAChBK,KAAKI,WAAaA,C,GA2DW,CAC/BT,SAAU,WACVS,WAAY,IAAIC,KAAK,0BAGjBN","sources":["src/js/timer.js"],"sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n  }\n\n  marckup(selector) {\n    const template = `\n    <div class=\"field\">\n           <span class=\"value\" data-value=\"days\">00</span>\n           <span class=\"label\">Days</span>\n         </div>\n         <div class=\"field\">\n           <span class=\"value\" data-value=\"hours\">00</span>\n           <span class=\"label\">Hours</span>\n         </div>\n       \n         <div class=\"field\">\n           <span class=\"value\" data-value=\"mins\">00</span>\n           <span class=\"label\">Minutes</span>\n         </div>\n       \n         <div class=\"field\">\n           <span class=\"value\" data-value=\"secs\">00</span>\n           <span class=\"label\">Seconds</span>\n         </div>\n       `;\n    document.querySelector(selector).insertAdjacentHTML('beforeend', template);\n  }\n\n  start() {\n    this.marckup(this.selector);\n    const intervalId = setInterval(() => {\n      const delta = this.targetDate - Date.now();\n      this.updateTimer(delta, intervalId);\n    }, 1000);\n  }\n\n  updateTimer(time, intervalId) {\n    if (time <= 0) {\n      clearInterval(intervalId);\n      return;\n    }\n\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    document.querySelector('[data-value=\"days\"]').textContent = days;\n    document.querySelector('[data-value=\"hours\"]').textContent = hours;\n    document.querySelector('[data-value=\"mins\"]').textContent = mins;\n    document.querySelector('[data-value=\"secs\"]').textContent = secs;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Oct 11 2023 18:20:55'),\n});\n\ntimer.start();\n"],"names":["marckup","selector","document","querySelector","insertAdjacentHTML","start","this","intervalId","setInterval","delta","targetDate","Date","now","updateTimer","time","clearInterval","days","pad","Math","floor","hours","mins","secs","textContent","value","String","padStart","constructor"],"version":3,"file":"index.c8b13db7.js.map"}