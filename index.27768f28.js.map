{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECsDG,IAAX,W,sBA9DGgB,EACQC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,W,aACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,C,iBAGpBR,IAAA,U,MAAA,SAAQO,GAqBNG,SAASC,cAAcJ,GAAUK,mBAAmB,YApBlC,6nB,IAuBpBZ,IAAA,Q,MAAA,W,WACES,KAAKI,QAAQJ,KAAKF,UAClB,IAAMO,EAAaC,aAAY,WAC7B,IAAMC,EAAQC,EAAKT,WAAaU,KAAKC,MACrCF,EAAKG,YAAYJ,EAAOF,E,GACvB,I,IAGLd,IAAA,c,MAAA,SAAYqB,EAAMP,GAChB,GAAIO,GAAQ,EACVC,cAAcR,OADhB,CAKA,IAAMS,EAAOd,KAAKe,IAAIC,KAAKC,MAAML,EAAQ,QACnCM,EAAQlB,KAAKe,IACjBC,KAAKC,MAAML,EAAS,MAAyB,OAEzCO,EAAOnB,KAAKe,IAAIC,KAAKC,MAAML,EAAS,KAAoB,MACxDQ,EAAOpB,KAAKe,IAAIC,KAAKC,MAAML,EAAS,IAAc,MAExDX,SAASC,cAAc,uBAAuBmB,YAAcP,EAC5Db,SAASC,cAAc,wBAAwBmB,YAAcH,EAC7DjB,SAASC,cAAc,uBAAuBmB,YAAcF,EAC5DlB,SAASC,cAAc,uBAAuBmB,YAAcD,C,KAG9D7B,IAAA,M,MAAA,SAAId,GACF,OAAO6C,OAAO7C,GAAO8C,SAAS,EAAG,I,OAIlC,GAAW,CAAmB,CAC/BzB,SAAU,WACVC,WAAY,IAAIU,KAAK,0BAGjBe,O","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/timer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n  }\n\n  marckup(selector) {\n    const template = `\n    <div class=\"field\">\n           <span class=\"value\" data-value=\"days\">00</span>\n           <span class=\"label\">Days</span>\n         </div>\n         <div class=\"field\">\n           <span class=\"value\" data-value=\"hours\">00</span>\n           <span class=\"label\">Hours</span>\n         </div>\n       \n         <div class=\"field\">\n           <span class=\"value\" data-value=\"mins\">00</span>\n           <span class=\"label\">Minutes</span>\n         </div>\n       \n         <div class=\"field\">\n           <span class=\"value\" data-value=\"secs\">00</span>\n           <span class=\"label\">Seconds</span>\n         </div>\n       `;\n    document.querySelector(selector).insertAdjacentHTML('beforeend', template);\n  }\n\n  start() {\n    this.marckup(this.selector);\n    const intervalId = setInterval(() => {\n      const delta = this.targetDate - Date.now();\n      this.updateTimer(delta, intervalId);\n    }, 1000);\n  }\n\n  updateTimer(time, intervalId) {\n    if (time <= 0) {\n      clearInterval(intervalId);\n      return;\n    }\n\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    document.querySelector('[data-value=\"days\"]').textContent = days;\n    document.querySelector('[data-value=\"hours\"]').textContent = hours;\n    document.querySelector('[data-value=\"mins\"]').textContent = mins;\n    document.querySelector('[data-value=\"secs\"]').textContent = secs;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Oct 11 2023 18:20:55'),\n});\n\ntimer.start();\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","CountdownTimer","param","selector","targetDate","this","document","querySelector","insertAdjacentHTML","marckup","intervalId","setInterval","delta","_this","Date","now","updateTimer","time","clearInterval","days","pad","Math","floor","hours","mins","secs","textContent","String","padStart","start"],"version":3,"file":"index.27768f28.js.map"}